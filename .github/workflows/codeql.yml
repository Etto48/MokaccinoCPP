# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  push:
    branches: [ "master" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "master" ]
  schedule:
    - cron: '0 0 * * 1'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Use only 'java' to analyze code written in Java, Kotlin or both
        # Use only 'javascript' to analyze code written in JavaScript, TypeScript or both
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.

        # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality

    - name: Install APT packages
      run: |
        sudo apt update
        sudo apt install -y libasound2-dev libboost-dev libboost-chrono-dev libboost-thread-dev libboost-program-options-dev libssl-dev
    
    - name: Cache PortAudio
      id: portaudio-cache
      uses: actions/cache@v3
      with: 
        path: portaudio-19.7.0
        key: ${{ runner.os }}-PortAudio

    - name: Download and compile PortAudio
      if: steps.portaudio-cache.outputs.cache-hit != 'true'
      run: |
        wget https://github.com/PortAudio/portaudio/archive/refs/tags/v19.7.0.zip
        unzip v19.7.0.zip
        cd portaudio-19.7.0
        cmake -B build
        cmake --build build --config Release

    - name: Install PortAudio
      run: |
        cd portaudio-19.7.0
        sudo cmake --install build

    - name: Cache Opus
      id: opus-cache
      uses: actions/cache@v3
      with: 
        path: opus-1.3.1
        key: ${{ runner.os }}-Opus
      
    - name: Download and compile Opus
      if: steps.opus-cache.outputs.cache-hit != 'true'
      run: |
        wget https://archive.mozilla.org/pub/opus/opus-1.3.1.tar.gz
        tar -xvzf opus-1.3.1.tar.gz
        cd opus-1.3.1
        echo "set(CMAKE_BUILD_TYPE \"Release\")" > opus_buildtype.cmake
        cmake -B build
        cmake --build build --config Release
    
    - name: Install Opus
      run: |
        cd opus-1.3.1
        sudo cmake --install build

    - name: Cache CMake cache
      id: cmake-cache
      uses: actions/cache@v3
      with: 
        path: ${{github.workspace}}/build
        key: ${{ runner.os }}-cmake-build

    # Autobuild attempts to build any compiled languages  (C/C++, C#, Go, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

    #   If the Autobuild fails above, remove it and uncomment the following three lines.
    #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

    # - run: |
    #   echo "Run, Build Application using script"
    #   ./location_of_script_within_repo/buildscript.sh

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"
